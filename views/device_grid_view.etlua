<div id="main_view_device_json" class="main_view_device_json">
  <div id="device_grid_notice" class="device_grid_notice">
    Hover over areas with&nbsp;
    <span class="hoverable_element" data-toggle="tooltip" data-placement="bottom" data-html="true" title="Just like that!<br/>Note: if a register only shows 16 bits, then [17:31] are reserved.">
      blue outlines
    </span>
    &nbsp;for more information.
  </div>
  <div class="device_grid_banner">Basic device information:</div>
  <table id="device_basics_table" class="device_basics_table" cellpadding="0" cellspacing="0">
    <tr id="device_basics_table_row">
      <td id="device_grid_name_cell" class="device_grid_basics_cell text-right">
        <span class="device_grid_name_outline hoverable_element" data-toggle="tooltip" data-placement="bottom" data-html="true" title="Description: <%= device.description %><br/>Address unit bits: <%= device.address_unit_bits %><br/>Schema version: <%= device.schema_version %><br/>Version: <%= device.version %>">
          Name: 
          <span id="device_name" class="device_grid_attr">
            <%= device.name %>
          </span>
        </span>
      </td>
      <td id="device_grid_cpu_cell" class="device_grid_basics_cell text-center">
        <span class="device_grid_cpu_outline hoverable_element" data-toggle="tooltip" data-placement="bottom" data-html="true" title="NVIC priority bits: <%= device.cpu.nvic_priority_bits %><br/>FPU present?: <%= device.cpu.fpu_present %><br/>MPU present?: <%= device.cpu.mpu_present %><br/>Vendor SysTick?: <%= device.cpu.has_vendor_systick %><br/>Endian-ness: <%= device.cpu.endian %>">
          CPU: 
          <span id="device_cpu" class="device_grid_attr">
            <%= device.cpu.name %> (<%= device.cpu.revision %>)
          </span>
        </span>
      </td>
      <td id="device_grid_defaults_cell" class="device_grid_basics_cell text-left">
        <span class="device_grid_defaults_outline hoverable_element" data-toggle="tooltip" data-placement="bottom" data-html="true" title="Size: <%= device.defaults.size %><br/>Reset value: <%= "0x" .. string.format( "%08X", device.defaults.reset_value ) %><br/>Reset mask: <%= "0x" .. string.format( "%08X", device.defaults.reset_mask ) %>">
          <span id="device_defaults" class="device_grid_attr">
            Register defaults
          </span>
        </span>
      </td>
    </tr>
  </table>
  <div class="device_grid_banner">Peripherals:</div>
  <div class="device_grid_periphs">
    <div class="device_grid_periph_container">
      <% for ind in pairs( device.peripherals ) do %>
        <% per = device.peripherals[ ind ] %>
        <span id="device_grid_periph_<%= per.name %>">
          <button id="device_grid_periph_<%= per.name %>_button" class="btn btn-info device_grid_periph_button" data-toggle="collapse" href="#device_grid_periph_collapse_<%= per.name %>" aria-expanded="false" aria-controls="device_grid_periph_collapse_<%= per.name %>">
            <%= per.name %>
          </button>
        </span>
      <% end %>
    </div>
    <div id="device_grid_periph_show" class="device_grid_periph_show">
      <% for ind in pairs( device.peripherals ) do %>
        <% per = device.peripherals[ ind ] %>
        <% if per.derived_from then %>
          <% periph_hover_str = "Base address: 0x" .. string.format( "%08X", per.base_address ) %>
        <% else %>
          <% periph_hover_str = "Base address: 0x" .. string.format( "%08X", per.base_address ) .. "<br/>Address block size: " .. per.address_block.size .. "<br/>Address block offset: " .. per.address_block.offset .. "<br/>Peripheral group: " .. per.group_name .. "<br/>Description: " .. per.description %>
        <% end %>
        <div id="device_grid_periph_collapse_<%= per.name %>" class="device_grid_periph_collapse collapse" role="tabpanel">
          <div class="device_periph_banner">
            <span class="hoverable_element" data-toggle="tooltip" data-placement="auto" data-html="true" title="<%= periph_hover_str %>">
              <%= per.name %>: <%= '0x' .. string.format( "%08X", per.base_address ) %>
            </span>
          </div>
          <% if per.derived_from then %>
          <% else %>
            <table id="device_grid_periph_table_<%= per.name %>" class="device_grid_periph_table" cellpadding="0" cellspacing="0">
              <% for reg_ind in pairs( per.registers ) do %>
                <% reg = per.registers[ reg_ind ].Register %>
                <tr id="device_grid_periph_tr_<%= per.name %>_<%= reg.Single.name %>" class="device_grid_periph_tr">
                  <td id="device_grid_periph_td_<%= per.name %>_<%= reg.Single.name %>_name" class="device_grid_periph_td_name" data-toggle="tooltip" data-placement="top" data-html="true" data-container="body" title="Description: <%= reg.Single.description %><br/>Reset value: <%= '0x' .. string.format( '%08X', reg.Single.reset_value ) %>">
                    <%= reg.Single.name %>
                    <br/>
                    <% if reg.Single.address_offset > 255 then %>
                      +0x<%= string.format( "%04X", reg.Single.address_offset ) %>
                    <% else %>
                      +0x<%= string.format( "%02X", reg.Single.address_offset ) %>
                    <% end %>
                  </td>
                  <td id="device_grid_periph_td_<%= per.name %>_<%= reg.Single.name %>_bits" class="device_grid_periph_td">
                    <table id="device_grid_regbits_table_<%= per.name %>_<%= reg.Single.name %>" class="device_grid_regbits_table" cellpadding="0" cellspacing="0">
                      <% is_32b_reg = false %>
                      <% for bit_ind in pairs( reg.Single.fields ) do %>
                        <% field = reg.Single.fields[ bit_ind ] %>
                        <% if ( field.bit_range.offset + field.bit_range.width ) > 16 then %>
                          <% is_32b_reg = true %>
                        <% end %>
                      <% end %>
                      <!-- TODO: do I really have to iterate over the bitfield array 32 times? -->
                      <!-- It shouldn't matter since there are <32 elements, but it feels inefficient. -->
                      <!-- Anyways, I should re-do the algorithm to merge 'Reserved' fields. -->
                      <% if is_32b_reg then %>
                        <tr class="device_grid_regbits_trh">
                          <% for i = 0,15 do %>
                            <% found_bitfield = false %>
                            <% for bit_ind in pairs( reg.Single.fields ) do %>
                              <% field = reg.Single.fields[ bit_ind ] %>
                              <% field_min = field.bit_range.offset %>
                              <% field_ext = field_min + field.bit_range.width %>
                              <% if ( 31 - i ) == field_min then %>
                                <% if field.access then %>
                                  <% f_access = field.access %>
                                <% else %>
                                  <% f_access = reg.Single.access %>
                                <% end %>
                                <td class="device_grid_reg_desc_td" colspan="<%= field_ext - field_min %>" data-toggle="tooltip" data-placement="auto" data-html="true" data-container="body" title="<b><%= field.description %></b><br/><%= f_access %>">
                                  <%= field.name %>
                                </td>
                              <% elseif ( 31 - i ) == 16 and ( 31 - i ) > field_min and ( 31 - i ) < field_ext then %>
                                <% if field.access then %>
                                  <% f_access = field.access %>
                                <% else %>
                                  <% f_access = reg.Single.access %>
                                <% end %>
                                <td class="device_grid_reg_desc_td" colspan="<%= field_ext - 16 %>" data-toggle="tooltip" data-placement="auto" data-html="true" data-container="body" title="<b><%= field.description %></b><br/><%= f_access %>">
                                  <%= field.name %>
                                </td>
                              <% end %>
                              <% if ( 31 - i ) >= field_min and ( 31 - i ) < field_ext then %>
                                <% found_bitfield = true %>
                              <% end %>
                            <% end %>
                            <% if not found_bitfield then %>
                              <td class="device_grid_reg_desc_reserved">R</td>
                            <% end %>
                          <% end %>
                        </tr>
                        <tr class="device_grid_regbits_tr">
                          <% for i = 0,15 do %>
                            <% if bit32.band( bit32.arshift( 1, -( 31 - i ) ), reg.Single.reset_value ) ~= 0 then %>
                              <td class="device_grid_reg_bit_td device_grid_reg_reset_on"><%= ( 31 - i ) %></td>
                            <% else %>
                              <td class="device_grid_reg_bit_td device_grid_reg_reset_off"><%= ( 31 - i ) %></td>
                            <% end %>
                          <% end %>
                        </tr>
                      <% end %>
                      <tr class="device_grid_regbits_trh">
                        <!-- Ditto the above TODOs, plus one for this code duplication. -->
                        <!-- But many registers are 16-bit, and this fits better. -->
                        <% for i = 0,15 do %>
                          <% found_bitfield = false %>
                          <% for bit_ind in pairs( reg.Single.fields ) do %>
                            <% field = reg.Single.fields[ bit_ind ] %>
                            <% field_min = field.bit_range.offset %>
                            <% field_ext = field_min + field.bit_range.width %>
                            <% if ( 15 - i ) == field_min then %>
                              <% if field.access then %>
                                <% f_access = field.access %>
                              <% else %>
                                <% f_access = reg.Single.access %>
                              <% end %>
                              <td class="device_grid_reg_desc_td" colspan="<%= field_ext - field_min %>" data-toggle="tooltip" data-placement="auto" data-html="true" data-container="body" title="<b><%= field.description %></b><br/><%= f_access %>">
                                <%= field.name %>
                              </td>
                            <% end %>
                            <% if ( 15 - i ) >= field_min and ( 15 - i ) < field_ext then %>
                              <% found_bitfield = true %>
                            <% end %>
                          <% end %>
                          <% if not found_bitfield then %>
                            <td class="device_grid_reg_desc_reserved" data-toggle="tooltip" data-placement="auto" data-html="true" data-container="body" title="<b>Reserved</b>">R</td>
                          <% end %>
                        <% end %>
                      </tr>
                      <tr class="device_grid_regbits_tr">
                        <% for i = 0,15 do %>
                          <% if bit32.band( bit32.arshift( 1, -( 15 - i ) ), reg.Single.reset_value ) ~= 0 then %>
                            <td class="device_grid_reg_bit_td device_grid_reg_reset_on"><%= ( 15 - i ) %></td>
                          <% else %>
                            <td class="device_grid_reg_bit_td device_grid_reg_reset_off"><%= ( 15 - i ) %></td>
                          <% end %>
                        <% end %>
                      </tr>
                    </table>
                  </td>
                </tr>
              <% end %>
            </table>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>
